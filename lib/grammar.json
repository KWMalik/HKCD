{   
    "lex": {
        "macros": {
            "Letter": "[a-zA-Z]",
            "Digit" : "[0-9]",
            "NonZeroDigit" : "[1-9]",
        },
        
        "rules": [
            ["/\\*.*?\\*/", "/* skip */"],
            ["//.*", "/* skip */"],
            ["\\s+", "/* skip */"],
            ["class\\b", "return 'ReservedWord';"],
            ["public\\b", "return 'ReservedWord';"],
            ["void\\b", "return 'ReservedWord';"],
            ["String\\b", "return 'ReservedWord';"],
            ["static\\b", "return 'ReservedWord';"],
            ["main\\b", "return 'ReservedWord';"],
            ["extends\\b", "return 'ReservedWord';"],
            ["int\\b", "return 'ReservedWord';"],
            ["boolean\\b", "return 'ReservedWord';"],
            ["if\\b", "return 'ReservedWord';"],
            ["else\\b", "return 'ReservedWord';"],
            ["while\\b", "return 'ReservedWord';"],
            ["return\\b", "return 'ReservedWord';"],
            ["null\\b", "return 'ReservedWord';"],
            ["true\\b", "return 'ReservedWord';"],
            ["false\\b", "return 'ReservedWord';"],
            ["this\\b", "return 'ReservedWord';"],
            ["new\\b", "return 'ReservedWord';"],
            ["System.out.println\\b", "return 'ReservedWord';"],
            ["{Letter}({Letter}|{Digit})*", "return 'ID';"],
            ["({NonZeroDigit}{Digit}*|0)", "return 'Integer';"],
            ["(\\+|-|\\*|\\/|<=|<|>=|>|==|\\!=|&&|\\|\\||\\!)", "return 'Operator';"],
            ["(;|\\.|,|=|\\(|\\)|\\{|\\}|\\[|\\])", "return 'Delimiter';"],
        ]
    },

    "bnf": { 
        "Program" : ["ReservedWord Program", "ReservedWord", "ID", "Delimiter", "Integer", "Operator"]
    }
}