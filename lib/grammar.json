{   
    "lex": {
        "macros": {
            "Letter": "[a-zA-Z]",
            "Digit" : "[0-9]",
            "NonZeroDigit" : "[1-9]",
        },
        
        "rules": [
            ["/\\*(.|\\n|\\r|\\r\\n)*?\\*/",    "/* skip */"],
            ["//.*",                            "/* skip */"],
            ["\\s+",                            "/* skip */"],
            ["(class|public|static|void|main|String|extends|int|boolean|return|if|else|while|true|new|null|false|this)\\b", "return yytext;"],
            ["System\\.out\\.println\\b",       "return 'printLine';"],
            ["{Letter}({Letter}|{Digit})*",     "return 'ID';"],
            ["({NonZeroDigit}{Digit}*|0)",      "return 'Integer';"],
            ["(\\!=|\\!|-|\\+|\\*|&&|\\/|>=|>|<=|<|==|\\|\\||\\{|\\}|\\[|\\]|\\(|\\)|\\.|;|,|=)", "return yytext;"],
        ]
    },
    
    "operators": [
        ["right", "="],
        ["left", "||"],
        ["left", "&&"],
        ["nonassoc", "==", "!="],
        ["left", "<", "<=", ">", ">="],
        ["left", "+", "-"],
        ["left", "*", "/"],
        ["right", "!", "UMINUS", "."],
    ],

    "bnf": { 
        "Program":          [
                                ["MainClassDecl ClassDeclList", "yy.createProduction('<Program>', '<MainClassDecl> <ClassDeclList>');"]
                            ],
        "MainClassDecl":    [
                                ["class ID { public static void main ( String [ ] ID ) { StmtList } }", "yy.createProduction('<MainClassDecl>', 'class ID { public static void main ( String [ ] ID ) { <StmtList> } }');"]
                            ],
        "ClassDeclList":    [
                                ["", "yy.createProduction('<ClassDeclList>', 'epsilon');"],
                                ["ClassDecl ClassDeclList", "yy.createProduction('<ClassDeclList>', '<ClassDecl> <ClassDeclList>');"]
                            ],
        "ClassDecl":        [
                                ["class ID Extension { ClassVarDeclList MethodDeclList }", "yy.createProduction('<ClassDecl>', 'class ID <Extension> { <ClassVarDeclList> <MethodDeclList> }');"]
                            ],
        "Extension":        [
                                ["", "yy.createProduction('<Extension>', 'epsilon');"],
                                ["extends ID", "yy.createProduction('<Extension>', 'extends ID');"]
                            ],
        "ClassVarDeclList": [
                                ["", "yy.createProduction('<ClassVarDeclList>', 'epsilon');"],
                                ["ClassVarDecl ClassVarDeclList", "yy.createProduction('<ClassVarDeclList>', '<ClassVarDecl> <ClassVarDeclList>');"]
                            ],
        "ClassVarDecl":     [
                                ["Type ID ;", "yy.createProduction('<ClassVarDecl>', '<Type> ID');"]
                            ],
        "MethodDeclList":   [
                                ["", "yy.createProduction('<MethodDeclList>', 'epsilon');"],
                                ["MethodDecl MethodDeclList", "yy.createProduction('<MethodDeclList>', '<MethodDecl> <MethodDeclList>');"]
                            ],
        "MethodDecl":       [
                                ["public Type ID ( FormalList ) { StmtList return Expr ; }", "yy.createProduction('<MethodDecl>', 'public <Type> ID ( <FormalList> ) { <StmtList> return <Expr> ; }');"]
                            ],
        "FormalList":       [
                                ["", "yy.createProduction('<FormalList>', 'epsilon');"],
                                ["Formal FormalList_", "yy.createProduction('<FormalList>', '<Formal> <FormalList_>');"]
                            ],
        "FormalList_":      [
                                ["", "yy.createProduction('<FormalList_>', 'epsilon');"],
                                [", Formal FormalList_", "yy.createProduction('<FormalList_>', ', <Formal> <FormalList_>');"]
                            ],
        "Formal":           [
                                ["Type ID", "yy.createProduction('<Formal>', '<Type> ID');"]
                            ],
        "Type":             [
                                ["int", "yy.createProduction('<Type>', 'int');"],
                                ["boolean", "yy.createProduction('<Type>', 'boolean');"],
                                ["ID", "yy.createProduction('<Type>', 'ID');"]
                            ],
        "StmtList":         [
                                ["", "yy.createProduction('<StmtList>', 'epsilon');"],
                                ["Stmt StmtList", "yy.createProduction('<StmtList>', '<Stmt> <StmtList>');"]
                            ],
        "Stmt":             [
                                ["Type ID = Expr ;", "yy.createProduction('<Stmt>', '<Type> ID = <Expr> ;');"],
                                ["{ StmtList }", "yy.createProduction('<Stmt>', '{ <StmtList> }');"],
                                ["if ( Expr ) Stmt else Stmt", "yy.createProduction('<Stmt>', 'if ( <Expr> ) <Stmt> else <Stmt>');"],
                                ["while ( Expr ) Stmt", "yy.createProduction('<Stmt>', 'while ( <Expr> ) <Stmt>');"],
                                ["printLine ( Expr ) ;", "yy.createProduction('<Stmt>', '' + $1 + ' ( <Expr> )');"],
                                ["ID = Expr ;", "yy.createProduction('<Stmt>', 'ID = <Expr>');"]
                            ],
        "Expr":             [
                                ["Expr + Expr", "yy.createProduction('<Expr>', '<Expr> + <Expr>');"],
                                ["Expr - Expr", "yy.createProduction('<Expr>', '<Expr> - <Expr>');"],
                                ["Expr * Expr", "yy.createProduction('<Expr>', '<Expr> * <Expr>');"],
                                ["Expr / Expr", "yy.createProduction('<Expr>', '<Expr> / <Expr>');"],
                                ["Expr < Expr", "yy.createProduction('<Expr>', '<Expr> < <Expr>');"],
                                ["Expr <= Expr", "yy.createProduction('<Expr>', '<Expr> <= <Expr>');"],
                                ["Expr >= Expr", "yy.createProduction('<Expr>', '<Expr> >= <Expr>');"],
                                ["Expr > Expr", "yy.createProduction('<Expr>', '<Expr> > <Expr>');"],
                                ["Expr == Expr", "yy.createProduction('<Expr>', '<Expr> == <Expr>');"],
                                ["Expr != Expr", "yy.createProduction('<Expr>', '<Expr> != <Expr>');"],
                                ["Expr && Expr", "yy.createProduction('<Expr>', '<Expr> && <Expr>');"],
                                ["Expr || Expr", "yy.createProduction('<Expr>', '<Expr> || <Expr>');"],
                                ["! Expr", "yy.createProduction('<Expr>', '! <Expr>');"],
                                ["- Expr", "yy.createProduction('<Expr>', '- <Expr>');", {"prec": "UMINUS"}],
                                ["Expr . ID ( ParameterList )", "yy.createProduction('<Expr>', '<Expr> . ID ( <ParameterList> )');"],
                                ["new ID ( )", "yy.createProduction('<Expr>', 'new ID ( )');"],
                                ["ID", "yy.createProduction('<Expr>', 'ID');"],
                                ["this", "yy.createProduction('<Expr>', 'this');"],
                                ["Integer", "yy.createProduction('<Expr>', 'Integer');"],
                                ["null", "yy.createProduction('<Expr>', 'null');"],
                                ["true", "yy.createProduction('<Expr>', 'true');"],
                                ["false", "yy.createProduction('<Expr>', 'false');"], 
                                ["( Expr )", "yy.createProduction('<Expr>', '( <Expr> )');"]
                            ],
        "ParameterList":    [
                                ["", "yy.createProduction('<ParameterList>', 'epsilon');"],
                                ["Expr ParameterList_", "yy.createProduction('<ParameterList>', '<Expr> <ParameterList_>');"]
                            ],
        "ParameterList_":   [
                                ["", "yy.createProduction('<ParameterList_>', 'epsilon');"],
                                [", Expr ParameterList_", "yy.createProduction('<ParameterList_>', '<Expr> <ParameterList_>');"]
                            ],
    }
}