{   
    "lex": {
        "macros": {
            "Letter": "[a-zA-Z]",
            "Digit" : "[0-9]",
            "NonZeroDigit" : "[1-9]",
        },
        
        "rules": [
            ["/\\*(.|\\n|\\r|\\r\\n)*?\\*/",    "/* skip */"],
            ["//.*",                            "/* skip */"],
            ["\\s+",                            "/* skip */"],
            ["(class|public|static|void|main|String|extends|int|boolean|return|if|else|while|true|new|null|false|this)\\b", "return yytext;"],
            ["System\\.out\\.println\\b",       "return 'printLine';"],
            ["{Letter}({Letter}|{Digit})*",     "return 'ID';"],
            ["({NonZeroDigit}{Digit}*|0)",      "return 'Integer';"],
            ["(\\!=|\\!|-|\\+|\\*|&&|\\/|>=|>|<=|<|==|\\|\\||\\{|\\}|\\[|\\]|\\(|\\)|\\.|;|,|=)", "return yytext;"],
        ]
    },
    
    "operators": [
        ["right", "="],
        ["left", "||"],
        ["left", "&&"],
        ["nonassoc", "==", "!="],
        ["left", "<", "<=", ">", ">="],
        ["left", "+", "-"],
        ["left", "*", "/"],
        ["right", "!", "UMINUS", "."],
    ],

    "bnf": { 
        "Program":          [
                                ["MainClassDecl ClassDeclList", "$$ = new yy.Node('Program', [$1].concat($2)); return $$;"],
                            ],
        "MainClassDecl":    [
                                ["class JavaID { public static void main ( String [ ] JavaID ) { StmtList } }", "$$ = new yy.Node('MainClassDecl', [].concat($15), { 'class_decl': $2, 'param': $12 });"],
                            ],
        "ClassDeclList":    [
                                ["", "$$ = [];"],
                                ["ClassDecl ClassDeclList", "$2.unshift($1); $$ = $2;"],
                            ],
        "ClassDecl":        [
                                ["class JavaID Extension { ClassVarDeclList MethodDeclList }", "$$ = new yy.Node('ClassDecl', [].concat($5, $6), { 'class_decl': $2, 'extension': $3 });"],
                            ],
        "Extension":        [
                                ["", "$$ = null;"],
                                ["extends JavaID", "$$ = $2;"],
                            ],
        "ClassVarDeclList": [
                                ["", "$$ = [];"],
                                ["ClassVarDecl ClassVarDeclList", "$2.unshift($1); $$ = $2;"],
                            ],
        "ClassVarDecl":     [
                                ["Type JavaID ;", "$$ = new yy.Node('ClassVarDecl', [], { 'type': $1, 'var_name': $2 });"],
                            ],
        "MethodDeclList":   [
                                ["", "$$ = [];"],
                                ["MethodDecl MethodDeclList", "$2.unshift($1); $$ = $2;"],
                            ],
        "MethodDecl":       [
                                ["public Type JavaID ( FormalList ) { StmtList return Expr ; }", "$$ = new yy.Node('MethodDecl', $5.concat($8, [$10]), { 'return_type': $2, 'method_name': $3 });"],
                            ],
        "FormalList":       [
                                ["", "$$ = [];"],
                                ["Formal FormalList_", "$2.unshift($1); $$ = $2;"],
                            ],
        "FormalList_":      [
                                ["", "$$ = [];"],
                                [", Formal FormalList_", "$3.unshift($2); $$ = $3;"],
                            ],
        "Formal":           [
                                ["Type JavaID", "$$ = new yy.Node('Formal', [], { 'type': $1, 'param_name': $2 });"],
                            ],
        "Type":             [
                                ["int", "$$ = yytext;"],
                                ["boolean", "$$ = yytext;"],
                                ["ID", "$$ = yytext;"],
                            ],
        "StmtList":         [
                                ["", "$$ = [];"],
                                ["Stmt StmtList", "$2.unshift($1); $$ = $2;"],
                            ],
        "Stmt":             [
                                ["Type JavaID = Expr ;", "$$ = new yy.Node('InitialAssignment', [$4], { 'type': $1, 'var_name': $2 });"],
                                ["{ StmtList }", "$$ = new yy.Node('Block', [].concat($2));"],
                                ["if ( Expr ) Stmt else Stmt", "$$ = new yy.Node('If', [$3, $5, $7]);"],
                                ["while ( Expr ) Stmt", "$$ = new yy.Node('While', [$3, $5]);"],
                                ["printLine ( Expr ) ;", "$$ = new yy.Node('PrintLine', [$3]);"],
                                ["ID = Expr ;", "$$ = new yy.Node('Assignment', [$3], { 'var_name': $1 });"],
                            ],
        "Expr":             [
                                ["Expr + Expr", "$$ = new yy.Node('Add', [$1, $3]);"],
                                ["Expr - Expr", "$$ = new yy.Node('Subtract', [$1, $3]);"],
                                ["Expr * Expr", "$$ = new yy.Node('Multiply', [$1, $3]);"],
                                ["Expr / Expr", "$$ = new yy.Node('Divide', [$1, $3]);"],
                                ["Expr < Expr", "$$ = new yy.Node('LessThan', [$1, $3]);"],
                                ["Expr <= Expr", "$$ = new yy.Node('LessThanEqual', [$1, $3]);"],
                                ["Expr >= Expr", "$$ = new yy.Node('GreaterThanEqual', [$1, $3]);"],
                                ["Expr > Expr", "$$ = new yy.Node('GreaterThan', [$1, $3]);"],
                                ["Expr == Expr", "$$ = new yy.Node('Equal', [$1, $3]);"],
                                ["Expr != Expr", "$$ = new yy.Node('NotEqual', [$1, $3]);"],
                                ["Expr && Expr", "$$ = new yy.Node('And', [$1, $3]);"],
                                ["Expr || Expr", "$$ = new yy.Node('Or', [$1, $3]);"],
                                ["! Expr", "$$ = new yy.Node('Not', [$2]);"],
                                ["- Expr", "$$ = new yy.Node('Negate', [$2]);", {"prec": "UMINUS"}],
                                ["Expr . JavaID ( ParameterList )", "$$ = new yy.Node('Call', [$1, $3, $5]);"],
                                ["new JavaID ( )", "$$ = new yy.Node('Construct', [$2]);"],
                                ["ID", "$$ = yytext;"],
                                ["this", "$$ = yytext;"],
                                ["Integer", "$$ = yytext;"],
                                ["null", "$$ = yytext;"],
                                ["true", "$$ = yytext;"],
                                ["false", "$$ = yytext;"], 
                                ["( Expr )", "$$ = $2;"],
                            ],
        "ParameterList":    [
                                ["", "$$ = [];"],
                                ["Expr ParameterList_", "$2.unshift($1); $$ = $2;"],
                            ],
        "ParameterList_":   [
                                ["", "$$ = [];"],
                                [", Expr ParameterList_", "$3.unshift($2); $$ = $3;"],
                            ],
        "JavaID":           [
                                ["ID", "$$ = yytext"],
                            ],
    }
}