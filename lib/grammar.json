{   
    "lex": {
        "macros": {
            "Letter": "[a-zA-Z]",
            "Digit" : "[0-9]",
            "NonZeroDigit" : "[1-9]",
        },
        
        "rules": [
            ["/\\*(.|\\n|\\r|\\r\\n)*?\\*/", "/* skip */"],
            ["//.*", "/* skip */"],
            ["\\s+", "/* skip */"],
            ["class\\b", "return 'class';"],
            ["public\\b", "return 'public';"],
            ["static\\b", "return 'static';"],
            ["void\\b", "return 'void';"],
            ["main\\b", "return 'main';"],
            ["String\\b", "return 'String';"],
            ["extends\\b", "return 'extends';"],
            ["int\\b", "return 'int';"],
            ["boolean\\b", "return 'boolean';"],
            ["return\\b", "return 'return';"],
            ["if\\b", "return 'if';"],
            ["else\\b", "return 'else';"],
            ["while\\b", "return 'while';"],
            ["true\\b", "return 'true';"],
            ["System\\.out\\.println\\b", "return 'printLine';"],
            ["new\\b", "return 'new';"],
            ["null\\b", "return 'null';"],
            ["false\\b", "return 'false';"],
            ["this\\b", "return 'this';"],
            ["{Letter}({Letter}|{Digit})*", "return 'ID';"],
            ["({NonZeroDigit}{Digit}*|0)", "return 'Integer';"],
            ["\\!=", "return '!=';"],
            ["\\!", "return '!';"],
            ["-", "return '-';"],
            ["\\+", "return '+';"],
            ["\\*", "return '*';"],
            ["&&", "return '&&';"],
            ["\\/", "return '/';"],
            [">=", "return '>=';"],
            [">", "return '>';"],
            ["<=", "return '<=';"],
            ["<", "return '<';"],
            ["==", "return '==';"],
            ["\\|\\|", "return '||';"],
            ["\\{", "return '{';"],
            ["\\}", "return '}';"],
            ["\\[", "return '[';"],
            ["\\]", "return ']';"],
            ["\\(", "return '(';"],
            ["\\)", "return ')';"],
            ["\\.", "return '.';"],
            [";", "return ';';"],
            [",", "return ',';"],
            ["=", "return '=';"],
        ]
    },
    
    "operators": [
        ["right", "="],
        ["left", "||"],
        ["left", "&&"],
        ["nonassoc", "==", "!="],
        ["left", "<", "<=", ">", ">="],
        ["left", "+", "-"],
        ["left", "*", "/"],
        ["right", "!", "UMINUS", "."],
    ],

    "bnf": { 
        "Program":          ["MainClassDecl ClassDeclList"],
        "MainClassDecl":    ["class ID { public static void main ( String [ ] ID ) { StmtList } }"],
        "ClassDeclList":    [
                                "",
                                "ClassDecl ClassDeclList"
                            ],
        "ClassDecl":        ["class ID Extension { ClassVarDeclList MethodDeclList }"],
        "Extension":        [
                                "",
                                "extends ID"
                            ],
        "ClassVarDeclList": [
                                "",
                                "ClassVarDecl ClassVarDeclList"
                            ],
        "ClassVarDecl":     ["Type ID ;"],
        "MethodDeclList":   [
                                "",
                                "MethodDecl MethodDeclList"
                            ],
        "MethodDecl":       ["public Type ID ( FormalList ) { StmtList return Expr ; }"],
        "FormalList":       [
                                "",
                                "Formal FormalList_"
                            ],
        "FormalList_":      [
                                "",
                                ", Formal FormalList_"
                            ],
        "Formal":           ["Type ID"],
        "Type":             [
                                "int",
                                "boolean",
                                "ID"
                            ],
        "StmtList":         [
                                "",
                                "Stmt StmtList"
                            ],
        "Stmt":             [
                                "Type ID = Expr ;",
                                "{ Stmt }",
                                "if ( Expr ) Stmt else Stmt",
                                "while ( Expr ) Stmt",
                                "printLine ( Expr ) ;",
                                "ID = Expr ;"
                            ],
        "Expr":             [
                                "Expr + Expr",
                                "Expr - Expr",
                                "Expr * Expr",
                                "Expr / Expr",
                                "Expr < Expr",
                                "Expr <= Expr",
                                "Expr >= Expr",
                                "Expr > Expr",
                                "Expr == Expr",
                                "Expr != Expr",
                                "Expr && Expr",
                                "Expr || Expr",
                                "! Expr",
                                ["- Expr", "$$ = -$2;", {"prec": "UMINUS"}],
                                "Expr . ID ( ParameterList )",
                                "new ID ( )",
                                "ID",
                                "this",
                                "Integer",
                                "null",
                                "true",
                                "false", 
                                "( Expr )"
                            ],
        "ParameterList":    [
                                "",
                                "Expr ParameterList_"
                            ],
        "ParameterList_":   [
                                "",
                                ", Expr ParameterList_"
                            ],
    }
}